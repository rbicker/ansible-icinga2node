---
# linux icinga2 configuration

#
# this was removed as it might break when updating nagios plugins
# it might be better to add the icinga user to the nagios group
# (see task below)
# 
#- name: ensure /usr/lib64/nagios/plugins/* is owned by icinga:icinga
#  file:
#    path: /usr/lib64/nagios/plugins
#    owner: "{{ icinga2_node_owner }}"
#    group: "{{ icinga2_node_group }}"
#    state: directory
#    recurse: true

- name: ensure icinga user is member of the nagios group
  user:
    name: icinga
    groups: nagios
    append: yes
  when: not ansible_os_family == "Debian"

- name: ensure directory /var/lib/icinga2/ca is present
  file:
    path: /var/lib/icinga2/ca
    state: directory
    owner: "{{ icinga2_node_owner }}"
    group: "{{ icinga2_node_group }}"
  when: icinga2_node_sync_ca

- name: get /var/lib/icinga2/ca/ca.crt contents from caserver
  slurp:
    src: /var/lib/icinga2/ca/ca.crt
  register: ca_crt
  delegate_to: "{{ icinga2_caserver }}"
  when: icinga2_node_sync_ca

- name: get /var/lib/icinga2/ca/ca.key contents from caserver
  slurp:
    src: /var/lib/icinga2/ca/ca.key
  register: ca_key
  delegate_to: "{{ icinga2_caserver  }}"
  when: icinga2_node_sync_ca

- name: get /var/lib/icinga2/ca/serial.txt contents from icinga2_caserver
  slurp:
    src: /var/lib/icinga2/ca/serial.txt
  register: ca_serial
  delegate_to: "{{ icinga2_caserver  }}"
  when: icinga2_node_sync_ca

- name: ensure /var/lib/icinga2/ca/ca.crt is in sync
  copy:
    content: "{{ ca_crt['content'] | b64decode }}"
    dest: /var/lib/icinga2/ca/ca.crt
    owner: "{{ icinga2_node_owner }}"
    group: "{{ icinga2_node_group }}"
    mode: 0644
  when: icinga2_node_sync_ca

- name: ensure /var/lib/icinga2/ca/ca.key is in sync
  copy:
    content: "{{ ca_key['content'] | b64decode }}"
    dest: /var/lib/icinga2/ca/ca.key
    owner: "{{ icinga2_node_owner }}"
    group: "{{ icinga2_node_group }}"
    mode: 0600
  when: icinga2_node_sync_ca

- name: ensure /var/lib/icinga2/ca/serial.txt is in sync
  copy:
    content: "{{ ca_serial['content'] | b64decode }}"
    dest: /var/lib/icinga2/ca/serial.txt
    owner: "{{ icinga2_node_owner }}"
    group: "{{ icinga2_node_group }}"
    mode: 0644
  when: icinga2_node_sync_ca

- name: ensure /etc/icinga2/pki directory is present
  file:
    path: /etc/icinga2/pki
    state: directory
    owner: "{{ icinga2_node_owner }}"
    group: "{{ icinga2_node_group }}"

- name: check if pki key already exists
  stat:
    path: "/etc/icinga2/pki/{{ icinga2_node_endpoint }}.key"
  register: icinga2_pki_keyfile

- name: icinga2 pki ticket generation on keyserver
  command: "icinga2 pki ticket --cn {{ icinga2_node_endpoint }}"
  delegate_to: "{{ icinga2_caserver  }}"
  register: icinga2_pki_ticket
  when:
    - not icinga2_pki_keyfile.stat.exists or icinga2_generate_keypair_force
    - icinga2_generate_keypair

- name: icinga2 pki new-cert
  command: >-
    icinga2 pki new-cert --cn {{ icinga2_node_endpoint }}
    --key /etc/icinga2/pki/{{ icinga2_node_endpoint }}.key
    --cert /etc/icinga2/pki/{{ icinga2_node_endpoint }}.crt
  when:
    - not icinga2_pki_keyfile.stat.exists or icinga2_generate_keypair_force
    - icinga2_generate_keypair

- name: icinga2 pki save-cert
  command: >-
    icinga2 pki save-cert --key /etc/icinga2/pki/{{ icinga2_node_endpoint }}.key
    --cert /etc/icinga2/pki/{{ icinga2_node_endpoint }}.crt
    --trustedcert /etc/icinga2/pki/trusted-master.crt
    --host {{ icinga2_parent_host }}
  when:
    - not icinga2_pki_keyfile.stat.exists or icinga2_generate_keypair_force
    - icinga2_generate_keypair

- name: icinga2 pki request
  command: >-
    icinga2 pki --host {{ icinga2_parent_host }} --port {{ icinga2_parent_port }}
    --ticket {{ icinga2_pki_ticket.stdout }} --key /etc/icinga2/pki/{{ icinga2_node_endpoint }}.key
    --cert /etc/icinga2/pki/{{ icinga2_node_endpoint }}.crt
    --trustedcert /etc/icinga2/pki/trusted-master.crt --ca /etc/icinga2/pki/ca.key
  when:
    - not icinga2_pki_keyfile.stat.exists or icinga2_generate_keypair_force
    - icinga2_generate_keypair

- name: icinga2 node setup
  command: >-
    icinga2 node setup --endpoint {{ icinga2_parent_endpoint }} --cn {{ icinga2_node_endpoint }}
    --parent_host {{ icinga2_parent_host }},{{ icinga2_parent_port }}
    --trustedcert /etc/icinga2/pki/trusted-master.crt
    --ticket {{ icinga2_pki_ticket.stdout }} --zone {{ icinga2_parent_zone }} --accept-config --accept-commands
  when:
    - not icinga2_pki_keyfile.stat.exists or icinga2_generate_keypair_force
    - icinga2_generate_keypair

- name: ensure icinga2 features are enabled
  file:
    src: "/etc/icinga2/features-available/{{ item }}.conf"
    dest: "/etc/icinga2/features-enabled/{{ item }}.conf"
    owner: "{{ icinga2_node_owner }}"
    group: "{{ icinga2_node_group }}"
    state: link
  with_items: "{{ icinga2_node_features }}"
  notify: linux node restart icinga2 service

- name: ensure icinga2.conf corresponds to template
  template:
    src: icinga2.conf.j2
    dest: /etc/icinga2/icinga2.conf
    owner: "{{ icinga2_node_owner }}"
    group: "{{ icinga2_node_group }}"
  notify: linux node restart icinga2 service

- name: ensure zones.conf corresponds to template
  template:
    src: zones.conf.j2
    dest: /etc/icinga2/zones.conf
    owner: "{{ icinga2_node_owner }}"
    group: "{{ icinga2_node_group }}"
  notify: linux node restart icinga2 service

- name: ensure NodeName constant is set
  lineinfile:
    regexp: "^const NodeName"
    line: "const NodeName = \"{{ icinga2_node_endpoint }}\""
    path: /etc/icinga2/constants.conf

- name: ensure ZoneName constant is set
  lineinfile:
    regexp: "^const ZoneName"
    line: "const ZoneName = \"{{ icinga2_node_zone }}\""
    path: /etc/icinga2/constants.conf

- name: ensure TicketSalt constant is set
  lineinfile:
    regexp: "^const TicketSalt"
    line: "const TicketSalt = \"{{ icinga2_node_salt }}\""
    path: /etc/icinga2/constants.conf
  when: icinga2_node_salt is defined
